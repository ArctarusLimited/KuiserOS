template bgp peers_v4 {
    local as OWN_AS;
    path metric 1;

    ipv4 {
        table exterior4;

        import keep filtered;
        import filter { if transit_import_v4() then accept; else reject; };

        export where source = RTS_STATIC;
        export filter eidolon_exports_v4;
    };
}

template bgp peers_v6 {
    local as OWN_AS;
    path metric 1;

    ipv6 {
        table exterior6;

        import keep filtered;
        import filter { if transit_import_v6() then accept; else reject; };

        export where source = RTS_STATIC;
        export filter eidolon_exports_v6;
    };
}

template bgp downstreams_v4 {
    local as OWN_AS;
    path metric 1;

    ipv4 {
        table exterior4;

        import keep filtered;
        import filter { reject; };

        export where source ~ [ RTS_STATIC, RTS_BGP ];
        export filter eidolon_exports_downstream_v4;
    };
}

template bgp downstreams_v6 {
    local as OWN_AS;
    path metric 1;

    ipv6 {
        table exterior6;

        import keep filtered;
        import filter { reject; };

        export where source ~ [ RTS_STATIC, RTS_BGP ];
        export filter eidolon_exports_downstream_v6;
    };
}

template bgp eid_ibgp_v4 {
    local as OWN_AS;

    ipv4 {
        table exterior4;
        igp table interior4; # this is for resolution of the next-hop

        import filter { preference = 50; ibgprt = 1; accept; };
        export filter { if is_v4_bogon() then reject; else accept; };
        export where source = RTS_BGP;

        next hop self;
    };
}

template bgp eid_ibgp_v6 {
    local as OWN_AS;

    ipv6 {
        table exterior6;
        igp table interior6;

        import filter { preference = 50; ibgprt = 1; accept; };
        export filter { if is_v6_bogon() then reject; else accept; };
        export where source = RTS_BGP;

        next hop self;
    };
}